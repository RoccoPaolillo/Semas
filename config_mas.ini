[ONTOLOGY]
# Ontology filename (.owl)
FILE_NAME = warehouse.owl
ONTO_NAME = warehouse

[REASONING]
ACTIVE = true
# HERMIT, PELLET
REASONER = HERMIT
# SPARQL queries Prefixes
PREFIXES =  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>,

[SWRL]
NUMBER_OF_RULES = 1
RULE1 = Warehouse(?x), hasAgent(?x,?y), Agent(?y) -> hasWorld(?y,?x)


[WORLDS]
# OWL entities
Worlds = Warehouse
# Worlds individuals properties
Properties = hasAgent

# OWL individuals with hasNumber > 1 they represents more individuals.
# Beliefs might be represented either by Properties (Object properties) or Data (Data properties)
[CLASSES]
# OWL entities
Entities = Agent, Task, State, Comm, Ledger
Properties = hasTask, hasDuty, hasWorld, hasLedger, hasComm, hasWorkTime
Data = hasIdPrefix, hasNumber, hasDutyTime, hasRestTime, hasMaxWorkTime
Desires = SetupWorkingDay, StartWork, PayWorkers
Intentions = GiveTask, SendComm, Pay, MoveAndCompleteJob, PauseWork, StopWork, SendComm, ReceiveComm

# PHIDIAS Beliefs
PHI-Beliefs = TASK, DUTY, COMM, WORKTIME, DUTY_TIME, AGENT_NUMBER, REST_TIME, LEDGER, MAX_WORK_TIME
# PHIDIAS Desire
PHI-Desires = setup, work, pay
# PHIDIAS Intentions
PHI-Intentions = MoveAndCompleteJob, AssignJob, SendComm, TIMEOUT, STOPWORK

# OWL-PHIDIAS beliefs linking (object)
hasTask = TASK
hasDuty = DUTY
hasLedger = LEDGER
hasComm = COMM
hasWorkTime = WORKTIME

# OWL-PHIDIAS beliefs linking (data)
hasIdPrefix = ID_PREFIX
hasDutyTime = MAX_WORK_TIME
hasRestTime = REST_TIME
hasNumber = AGENT_NUMBER
hasMaxWorkTime = MAX_WORK_TIME

# OWL-PHIDIAS desires linking
SetupWorkingDay = setup
StartWork = work
PayWorkers = pay

# OWL-PHIDIAS intentions linking (below items might be correspond to mere production rules, apart Reactors (which trigger specific rule)
MoveAndCompleteJob = MoveAndCompleteJob
GiveTask = GiveTask
SendComm = SendComm
ReceiveComm = ReceiveComm
PauseWork = TIMEOUT
StopWork = STOPWORK


# Ontology initialization (used only with OWL file creation)
[INDIVIDUALS]
# Entities individuals
Warehouse =  Fabioland
Agent = Chief, Worker
Task = Store-Goods
State = Duty
Comm = Comm
Ledger = Ledger

# Beliefs triples (ObjectProperties)
hasAgent = (FabioLand, hasAgent, Worker)

# Beliefs triples (DataProperties)
hasIdPrefix = (Worker, hasIdPrefix, worker)
hasNumber = (Worker, hasNumber, 3)
hasMaxWorkTime = (Worker, hasMaxWorkTime, 30)
hasDutyTime = (Worker, hasDutyTime, 5)
hasRestTime = (Worker, hasRestTime, 3)



