[ONTOLOGY]
# Ontology filename (.owl)
FILE_NAME = academia_mas.owl
ONTO_NAME = semas

[REASONING]
ACTIVE = false
# HERMIT, PELLET
REASONER = HERMIT
# SPARQL queries Prefixes
PREFIXES =  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>, PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>,

[SWRL]
NUMBER_OF_RULES = 0
RULE1 = Scholar(?x), coAuthorWith(?x,?y), Scholar(?y) -> coAuthorWith(?y,?x)

# OWL individuals with hasNumber > 1 represents more individuals of the same group (sharing all properties).
# Beliefs might be represented either by Properties (Object properties) or Data (Data properties)
[CLASSES]
# OWL entities
Entities = Agent, Scholar, Field, University, AgentTask
Properties = coAuthorWith, hasAffiliationWith, isTopAuthorIn, selectedFor, hasAgent, hasTask, maincomm
# I left Data since DATAS in action_mas.py, but useless 
Data = # hasIdPrefix, hasNumber 
Desires = publish
Intentions = AcceptOffer


# PHIDIAS Beliefs
PHI-Beliefs = CoAuthorship, Affiliation, Selectionship, TopAuthorship, AGT
# PHIDIAS Reactors (volatile beliefs that do not remain resident in the KB)
PHI-Reactors = COMMUNICATE, Testkb, COMMUNICATEMAIN
# PHIDIAS Desire
PHI-Desires = DesireGoalFor
# PHIDIAS Intentions
PHI-Intentions = AcceptOffer, CoauthorIndirect, DeleteSelection, DeleteAlternative

# OWL-PHIDIAS beliefs linking (object)
CoAuthorship = coAuthorWith
Affiliation = hasAffiliationWith
TopAuthorship = isTopAuthorIn
Selectionship = selectedFor
hasAgent = AGT
hasTask = COMMUNICATE
maincomm = COMMUNICATEMAIN
istestkb = Testkb

# OWL-PHIDIAS beliefs linking (data)
# hasIdPrefix = ID_PREFIX
# hasNumber = AGENT_NUMBER

# OWL-PHIDIAS desires linking
DesireGoalFor = publish

# OWL-PHIDIAS intentions linking (below items might be correspond to mere production rules, apart Reactors (which trigger specific rule)
AcceptOffer = AcceptOffer
CoauthorIndirect = coauthorIndirect
DeleteSelection = deleteselection
DeleteAlternative = deletealternative

# Ontology initialization (used only with OWL file creation)
[INDIVIDUALS]
# Entities individuals
Agent = Warehouse, AGT1, AGT2, AGT1a, AGT1b, AGT2a, AGT2b, AGT3a, AGT3b, AGT3c, AGT4a, AGT4b, AGT4c
AgentTask = GoPutShelves1, GoPutShelves2, GoPutShelves3, GoPutShelves4, GoPutShelves5
Scholar =  Warehouse, AGT1, AGT2, AGT1a, AGT1b, AGT2a, AGT2b, AGT3a, AGT3b, AGT3c, AGT4a, AGT4b, AGT4c
Field = Warehouse, Informatics, Mathematics
University = Warehouse, Uni1, Uni2, Uni3, Uni4

# OWL-PHIDIAS beliefs linking (ObjectProperties)
AGT = (Warehouse, hasAgent, AGT1) & (Warehouse, hasAgent, AGT2) & (Warehouse, hasAgent, AGT1a) & (Warehouse, hasAgent, AGT1b) & (Warehouse, hasAgent, AGT2a) & (Warehouse, hasAgent, AGT2b) & (Warehouse, hasAgent, AGT3a) & (Warehouse, hasAgent, AGT3b) & (Warehouse, hasAgent, AGT3c) & (Warehouse, hasAgent, AGT4a) & (Warehouse, hasAgent, AGT4b) & (Warehouse, hasAgent, AGT4c)
CoAuthorship = (AGT1, coAuthorWith, AGT1a) & (AGT1, coAuthorWith, AGT1b) & (AGT1a, coAuthorWith, AGT1b) & (AGT3a, coAuthorWith, AGT3b) & (AGT3a, coAuthorWith, AGT3c) & (AGT3c, coAuthorWith, AGT3b) & (AGT2, coAuthorWith, AGT2a) & (AGT2, coAuthorWith, AGT2b) & (AGT2a, coAuthorWith, AGT2b) & (AGT4a, coAuthorWith, AGT4b) & (AGT4a, coAuthorWith, AGT4c) & (AGT4b, coAuthorWith, AGT4c) & (AGT2b, coAuthorWith, AGT4a)
Affiliation = (AGT1, hasAffiliationWith, Uni1) & (AGT1a, hasAffiliationWith, Uni1) & (AGT1b, hasAffiliationWith, Uni1) & (AGT2, hasAffiliationWith, Uni2) & (AGT2a, hasAffiliationWith, Uni2) & (AGT2b, hasAffiliationWith, Uni2) & (AGT3a, hasAffiliationWith, Uni3) & (AGT3b, hasAffiliationWith, Uni3) & (AGT3c, hasAffiliationWith, Uni3) & (AGT4a, hasAffiliationWith, Uni4) & (AGT4b, hasAffiliationWith, Uni4) & (AGT4c, hasAffiliationWith, Uni4)      
TopAuthorship = (AGT1b, isTopAuthorIn, Informatics) & (AGT2b, isTopAuthorIn, Mathematics) 
Selectionship = (AGT1, selectedFor, Uni3) & (AGT1, selectedFor, Uni4) & (AGT2, selectedFor, Uni3) & (AGT2, selectedFor, Uni4)
COMMUNICATE = (AGT1, hasTask, GoPutShelves1) & (AGT2, hasTask, GoPutShelves1) & (AGT1a, hasTask, GoPutShelves2) & (AGT1b, hasTask, GoPutShelves2) & (AGT2a, hasTask, GoPutShelves3) & (AGT2b, hasTask, GoPutShelves3) & (AGT3a, hasTask, GoPutShelves4) & (AGT3b, hasTask, GoPutShelves4) & (AGT3c, hasTask, GoPutShelves4) & (AGT4a, hasTask, GoPutShelves5) & (AGT4b, hasTask, GoPutShelves5) & (AGT4c, hasTask, GoPutShelves5)
COMMUNICATEMAIN = (AGT1, maincomm, GoPutShelves1) & (AGT2, maincomm, GoPutShelves1) & (AGT1a, maincomm, GoPutShelves2) & (AGT1b, maincomm, GoPutShelves2) & (AGT2a, maincomm, GoPutShelves3) & (AGT2b, maincomm, GoPutShelves3) & (AGT3a, maincomm, GoPutShelves4) & (AGT3b, maincomm, GoPutShelves4) & (AGT3c, maincomm, GoPutShelves4) & (AGT4a, maincomm, GoPutShelves5) & (AGT4b, maincomm, GoPutShelves5) & (AGT4c, maincomm, GoPutShelves5)
Testkb =  (AGT1, istestkb, GoPutShelves1) & (AGT2, istestkb, GoPutShelves1) & (AGT1a, istestkb, GoPutShelves2) & (AGT1b, istestkb, GoPutShelves2) & (AGT2a, istestkb, GoPutShelves3) & (AGT2b, istestkb, GoPutShelves3) & (AGT3a, istestkb, GoPutShelves4) & (AGT3b, istestkb, GoPutShelves4) & (AGT3c, istestkb, GoPutShelves4) & (AGT4a, istestkb, GoPutShelves5) & (AGT4b, istestkb, GoPutShelves5) & (AGT4c, istestkb, GoPutShelves5)

# OWL-PHIDIAS reactors linking (object)
